# Stage 1: Build the .NET 8 server

# Use the official .NET 8 SDK image to build the server
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build

# Set the working directory
WORKDIR /app

# Copy the project files to the container
COPY Server/Server.csproj ./
RUN dotnet restore

# Copy the rest of the server code
COPY Server/. ./
RUN dotnet build -c Release -o /app/build

# Publish the server application
RUN dotnet publish -c Release -o /app/publish

# Stage 2: Build the React client

# Use the official Node.js image to build the client
FROM node:18 AS client-build

# Set the working directory
WORKDIR /client

# Copy the client project files
COPY Client/package.json Client/package-lock.json ./
RUN npm install

# Copy the rest of the client code
COPY Client/. ./
RUN npm run build

# Stage 3: Combine and serve both server and client

# Use the official ASP.NET Core runtime image for the final stage
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS final

# Set the working directory
WORKDIR /app

# Copy the published server from the build stage
COPY --from=build /app/publish ./

# Copy the built client from the client-build stage
COPY --from=client-build /client/build /app/wwwroot

# Expose port 80 for the ASP.NET Core app
EXPOSE 80

# Set the entry point for the container
ENTRYPOINT ["dotnet", "Server.dll"]
